#BlueJ class context
comment0.target=CoffeeShop
comment0.text=\r\n\ This\ class\ handles\ the\ simulation\ of\ the\ coffee\ shop\ and\ calculates\ all\ the\ necessary\ data\r\n\r\n\ @author\ Basit\ Balogun\r\n\ @version\ 10/12/2018\r\n
comment1.params=f
comment1.target=CoffeeShop(java.lang.String)
comment1.text=Constructor\ for\ objects\ of\ class\ CoffeeShop.\ It\ takes\ in\ the\ input\ file\ of\ customer\ entry\ times\ gets\ number\ of\ cashiers
comment10.params=
comment10.target=java.lang.String\ overflowRate()
comment10.text=Returns\ the\ overflow\ Rate\ as\ a\ String
comment11.params=
comment11.target=float\ netProfit()
comment11.text=Returns\ net\ Profit
comment12.params=
comment12.target=float\ totalCost()
comment12.text=Returns\ total\ Daily\ Cost
comment2.params=
comment2.target=void\ readFile()
comment2.text=Gets\ information\ from\ the\ input\ file\ and\ adds\ the\ times\ and\ customers\ to\ the\ priority\ queue\ and\ arrayList\ respectively
comment3.params=
comment3.target=void\ simulation()
comment3.text=Runs\ the\ simulation
comment4.params=e
comment4.target=void\ addToQueue(Event)
comment4.text=This\ method\ adds\ event\ to\ queue\ when\ the\ queue\ is\ not\ full
comment5.params=e
comment5.target=void\ serve(Event)
comment5.text=This\ method\ handles\ the\ serving\ of\ a\ customer
comment6.params=e
comment6.target=boolean\ isOpen(Event)
comment6.text=Checks\ if\ CoffeeShop\ is\ Open\ for\ new\ customer\ arrivals
comment7.params=
comment7.target=float\ totalProfit()
comment7.text=Returns\ total\ daily\ profit\ before\ cost\ deductions
comment8.params=
comment8.target=int\ avgWaitTime()
comment8.text=Returns\ the\ average\ wait\ time\ of\ the\ customers
comment9.params=
comment9.target=int\ maxWaitTime()
comment9.text=Returns\ the\ maximum\ wait\ time\ of\ the\ customers
numComments=13
